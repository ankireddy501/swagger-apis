{
  "swagger" : "2.0",
  "info" : {
    "description" : "Headline : WordPress is web software you can use to create a beautiful website or blog. ",
    "version" : "v1.1",
    "title" : "WordPress API"
  },
  "host" : "public-api.wordpress.com",
  "basePath" : "/rest/v1.1",
  "schemes" : [ "https" ],
  "paths" : {
    "/freshly-pressed" : {
      "get" : {
        "summary" : "List Freshly Pressed Posts",
        "description" : "List Freshly Pressed Posts",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "number",
          "in" : "query",
          "description" : "The number of posts to return. Default: 10. Limit: 40.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "content_width",
          "in" : "query",
          "description" : "When in context=display, images/embeds in post content will be set to the desired maximum width. Default: 480.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "thumb_width",
          "in" : "query",
          "description" : "Desired width of thumbnail images, in pixels. Default: 252.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "Return posts picked on or after the specified datetime.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "thumb_height",
          "in" : "query",
          "description" : "Desired height of thumbnail images, in pixels. Default: 160.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "Return posts picked on or before the specified datetime.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/posts"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      }
    },
    "/me" : {
      "get" : {
        "summary" : "Meta data about auth token's User",
        "description" : "Meta data about auth token's User",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/me"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      }
    },
    "/notifications" : {
      "get" : {
        "summary" : "Reverse-chronologically list User Notifications",
        "description" : "Reverse-chronologically list User Notifications",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Return only notifications of a particular type. Default is all types.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "read",
          "in" : "query",
          "description" : "Return only read comments. Default: false.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "unread",
          "in" : "query",
          "description" : "Return only unread comments. Default: false.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "num_note_items",
          "in" : "query",
          "description" : "Number of items to include in notifications that contain multiple items Default: 9.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "List of comma separated fields in the note object to return. Default: 'id,type,unread,noticon,body,subject,timestamp'.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "query",
          "description" : "The number of notifications to return. Default: 9. Limit: 99.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "ids",
          "in" : "query",
          "description" : "Array of ids to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "Return notifications updated on or before the specified UNIX time.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "Return notifications since the specified UNIX time.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "trap",
          "in" : "query",
          "description" : "Combine similar notes into one. Client should delete notes with empty subjects. Default: false.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      }
    },
    "/notifications/read" : {
      "post" : {
        "summary" : "Mark a set of Notifications as read",
        "description" : "Mark a set of Notifications as read",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model122"
          }
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications_read"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      }
    },
    "/notifications/seen" : {
      "post" : {
        "summary" : "Set the timestamp of the most recently seen Notification",
        "description" : "Set the timestamp of the most recently seen Notification",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model226"
          }
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications_seen"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      }
    },
    "/notifications/{note_ID}" : {
      "get" : {
        "summary" : "Get a Notification",
        "description" : "Get a Notification",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "List of comma separated fields in the note object to return. Default: 'id,type,unread,noticon,body,subject,timestamp'.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "num_note_items",
          "in" : "query",
          "description" : "Number of items to include in notifications that contain multiple items Default: 9.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/note"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "note_ID",
        "in" : "path",
        "description" : "The note ID",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/read/following" : {
      "get" : {
        "summary" : "List of posts from the blogs a user follows.",
        "description" : "List of posts from the blogs a user follows.",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "number",
          "in" : "query",
          "description" : "The number of posts to return. Limit: 40. Default: 10.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "Return posts dated on or before the specified datetime.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "DESC: (default) Return posts in descending order. For dates, that means newest to oldest. ASC: Return posts in ascending order. For dates, that means oldest to newest.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "Return posts dated on or after the specified datetime.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Return the Nth 1-indexed page of posts.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/posts"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      }
    },
    "/read/liked" : {
      "get" : {
        "summary" : "List of posts from the blogs a user likes.",
        "description" : "List of posts from the blogs a user likes.",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "Return posts dated on or after the specified datetime.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Return the Nth 1-indexed page of posts.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "DESC: (default) Return posts in descending order. For dates, that means newest to oldest. ASC: Return posts in ascending order. For dates, that means oldest to newest.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "Return posts dated on or before the specified datetime.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "query",
          "description" : "The number of posts to return. Limit: 40. Default: 10.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/posts"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      }
    },
    "/read/menu" : {
      "get" : {
        "summary" : "Default reader menu.",
        "description" : "Default reader menu.",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/read_menu"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      }
    },
    "/read/tags/{tag}" : {
      "get" : {
        "summary" : "Returns details about a specified tag.",
        "description" : "Returns details about a specified tag.",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/read_tag"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "tag",
        "in" : "path",
        "description" : "The tag name",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/read/tags/{tag}/posts" : {
      "get" : {
        "summary" : "List of posts from a tag",
        "description" : "List of posts from a tag",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "Return posts dated on or after the specified datetime.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "query",
          "description" : "The number of posts to return. Limit: 40. Default: 10.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Return the Nth 1-indexed page of posts.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "Return posts dated on or before the specified datetime.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "DESC: (default) Return posts in descending order. For dates, that means newest to oldest. ASC: Return posts in ascending order. For dates, that means oldest to newest.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/posts"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "tag",
        "in" : "path",
        "description" : "The tag name",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/sites/{site}" : {
      "get" : {
        "summary" : "Information about a site ID/domain",
        "description" : "Information about a site ID/domain",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/site"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/sites/{site}/categories/slug:{category}" : {
      "get" : {
        "summary" : "Returns information on a single Category",
        "description" : "Returns information on a single Category",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/category"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "post" : {
        "summary" : "Edit a Category",
        "description" : "Edit a Category",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model980"
          }
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/category"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "category",
        "in" : "path",
        "description" : "The category slug",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/sites/{site}/comments" : {
      "get" : {
        "summary" : "Return recent Comments",
        "description" : "Return recent Comments",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "any: (default) Return all comments regardless of type. comment: Return only regular comments. trackback: Return only trackbacks. pingback: Return only pingbacks. pings: Return both trackbacks and pingbacks.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "approved: (default) Return only approved comments. unapproved: Return only comments in the moderation queue. spam: Return only comments marked as spam. trash: Return only comments in the trash.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "query",
          "description" : "The number of comments to return. Limit: 100. Default: 20.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "DESC: (default) Return comments in descending order from newest to oldest. ASC: Return comments in ascending order from oldest to newest.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "0-indexed offset.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Return the Nth 1-indexed page of comments. Takes precedence over the offset parameter.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "Return comments dated on or after the specified datetime.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "Return comments dated on or before the specified datetime.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/comments"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/sites/{site}/comments/{comment_ID}" : {
      "get" : {
        "summary" : "Return a single Comment",
        "description" : "Return a single Comment",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/comment"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "post" : {
        "summary" : "Edit a Comment",
        "description" : "Edit a Comment",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model621"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/comment"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "comment_ID",
        "in" : "path",
        "description" : "The comment ID",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/sites/{site}/comments/{comment_ID}/replies/new" : {
      "post" : {
        "summary" : "Create a Comment as a reply to another Comment",
        "description" : "Create a Comment as a reply to another Comment",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model265"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/comment"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "comment_ID",
        "in" : "path",
        "description" : "The comment ID",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/sites/{site}/follows" : {
      "get" : {
        "summary" : "List a site's followers in reverse chronological order",
        "description" : "List a site's followers in reverse chronological order",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "query",
          "description" : "The number of followers to return. Default: 20.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page number Default: 1.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/site_follows"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/sites/{site}/posts/slug:{post_slug}" : {
      "get" : {
        "summary" : "Return a single Post (by slug)",
        "description" : "Return a single Post (by slug)",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/post"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "post_slug",
        "in" : "path",
        "description" : "The post slug (a.k.a. sanitized name)",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/sites/{site}/posts/{post_ID}" : {
      "get" : {
        "summary" : "Return a single Post (by ID)",
        "description" : "Return a single Post (by ID)",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/post"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "post" : {
        "summary" : "Edit a Post",
        "description" : "Edit a Post",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model609"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/post"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "post_ID",
        "in" : "path",
        "description" : "The post ID",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/sites/{site}/posts/{post_ID}/likes" : {
      "get" : {
        "summary" : "List the Likes for a Post",
        "description" : "List the Likes for a Post",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/site_post_likes"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "post_ID",
        "in" : "path",
        "description" : "The post ID",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/sites/{site}/posts/{post_ID}/likes/delete" : {
      "post" : {
        "summary" : "Remove your Like from a Post",
        "description" : "Remove your Like from a Post",
        "operationId" : "POST",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/likes"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "post_ID",
        "in" : "path",
        "description" : "The post ID",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/sites/{site}/posts/{post_ID}/reblogs/mine" : {
      "get" : {
        "summary" : "Get Reblog status for a Post",
        "description" : "Get Reblog status for a Post",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/mine_reblogs"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "post_ID",
        "in" : "path",
        "description" : "The post ID",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/sites/{site}/posts/{post_ID}/related" : {
      "post" : {
        "summary" : "Search within a site for related posts",
        "description" : "Search within a site for related posts",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model28"
          }
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/related_posts"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "post_ID",
        "in" : "path",
        "description" : "The post ID",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/sites/{site}/stats/streak" : {
      "get" : {
        "summary" : "View and visitor counts for a site",
        "description" : "View and visitor counts for a site",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Returns specified fields only. Comma-separated list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "max",
          "in" : "query",
          "description" : "maximum number of posts to return",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/statsStreak"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/sites/{site}/tags/slug:{tag}" : {
      "get" : {
        "summary" : "Returns information on a single Tag",
        "description" : "Returns information on a single Tag",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/tag"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "post" : {
        "summary" : "Edit a Tag",
        "description" : "Edit a Tag",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "pretty",
          "in" : "query",
          "description" : "false: (default) true: Output pretty JSON",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "http_envelope",
          "in" : "query",
          "description" : "false: (default) true: Some environments (like in-browser Javascript or Flash) block or divert responses with a non-200 HTTP status code. Setting this parameter will force the HTTP status code to always be 200. The JSON response is wrapped in an \"envelope\" containing the \"real\" HTTP status code and headers.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "display: (default) Formats the output as HTML for display. Shortcodes are parsed, paragraph tags are added, etc.. edit: Formats the output for editing. Shortcodes are left unparsed, significant whitespace is kept, etc..",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Optional. Loads data from the endpoints found in the 'meta' part of the response. Comma separated list. Example: meta=site,likes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "description" : "An optional JSONP callback function.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model165"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/tag"
            }
          },
          "403" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/notifications"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "tag",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "site",
        "in" : "path",
        "description" : "The site ID, The site domain",
        "required" : true,
        "type" : "string"
      } ]
    }
  },
  "definitions" : {
    "note" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer"
        },
        "unread" : {
          "type" : "integer"
        },
        "noticon" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer"
        },
        "date" : {
          "type" : "string"
        },
        "subject" : {
          "type" : "string"
        },
        "snippet" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "meta" : {
          "type" : "string"
        },
        "note" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "comments" : {
      "type" : "object",
      "properties" : {
        "found" : {
          "type" : "integer"
        }
      }
    },
    "notifications_seen" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean"
        },
        "last_seen_time" : {
          "type" : "integer"
        }
      }
    },
    "site_follows" : {
      "type" : "object",
      "properties" : {
        "found" : {
          "type" : "integer"
        }
      }
    },
    "site" : {
      "type" : "object",
      "properties" : {
        "ID" : {
          "type" : "number"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "URL" : {
          "type" : "string"
        },
        "jetpack" : {
          "type" : "boolean"
        },
        "subscribers_count" : {
          "type" : "number"
        },
        "is_private" : {
          "type" : "boolean"
        },
        "is_following" : {
          "type" : "number"
        },
        "meta" : {
          "type" : "object",
          "properties" : {
            "links" : {
              "type" : "object",
              "properties" : {
                "self" : {
                  "type" : "string"
                },
                "help" : {
                  "type" : "string"
                },
                "posts" : {
                  "type" : "string"
                },
                "comments" : {
                  "type" : "string"
                },
                "xmlrpc" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "mine_reblogs" : {
      "type" : "object",
      "properties" : {
        "is_reblogged" : {
          "type" : "boolean"
        },
        "meta" : {
          "type" : "object",
          "properties" : { }
        },
        "ID" : {
          "type" : "integer"
        }
      }
    },
    "site_post_likes" : {
      "type" : "object",
      "properties" : {
        "found" : {
          "type" : "integer"
        },
        "i_like" : {
          "type" : "boolean"
        }
      }
    },
    "read_menu" : {
      "type" : "object",
      "properties" : {
        "subscribed" : {
          "type" : "array"
        },
        "recommended" : {
          "type" : "array"
        }
      }
    },
    "notifications_read" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean"
        }
      }
    },
    "me" : {
      "type" : "object",
      "properties" : {
        "ID" : {
          "type" : "integer"
        },
        "display_name" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "primary_blog" : {
          "type" : "integer"
        },
        "token_site_id" : {
          "type" : "integer"
        },
        "avatar_URL" : {
          "type" : "string"
        },
        "profile_URL" : {
          "type" : "string"
        },
        "verified" : {
          "type" : "boolean"
        },
        "meta" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "comment" : {
      "type" : "object",
      "properties" : {
        "ID" : {
          "type" : "integer"
        },
        "post" : {
          "type" : "object",
          "properties" : { }
        },
        "author" : {
          "type" : "object",
          "properties" : { }
        },
        "date" : {
          "type" : "string"
        },
        "URL" : {
          "type" : "string"
        },
        "short_URL" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "meta" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "tag" : {
      "type" : "object",
      "properties" : {
        "ID" : {
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "slug" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "post_count" : {
          "type" : "integer"
        },
        "meta" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "category" : {
      "type" : "object",
      "properties" : {
        "ID" : {
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "slug" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "post_count" : {
          "type" : "integer"
        },
        "parent" : {
          "type" : "integer"
        },
        "meta" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "statsStreak" : {
      "type" : "object",
      "properties" : {
        "streak" : {
          "type" : "object",
          "properties" : {
            "long" : {
              "type" : "object",
              "properties" : {
                "start" : {
                  "type" : "string"
                },
                "end" : {
                  "type" : "string"
                },
                "length" : {
                  "type" : "number"
                }
              }
            },
            "current" : {
              "type" : "object",
              "properties" : {
                "start" : {
                  "type" : "string"
                },
                "end" : {
                  "type" : "string"
                },
                "length" : {
                  "type" : "number"
                }
              }
            }
          }
        },
        "data" : {
          "type" : "object",
          "properties" : {
            "1386491701" : {
              "type" : "number"
            },
            "1388302785" : {
              "type" : "number"
            },
            "1388729604" : {
              "type" : "number"
            },
            "1389341606" : {
              "type" : "number"
            },
            "1389946433" : {
              "type" : "number"
            },
            "1390198144" : {
              "type" : "number"
            }
          }
        }
      }
    },
    "notifications" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer"
        },
        "unread" : {
          "type" : "integer"
        },
        "noticon" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer"
        },
        "date" : {
          "type" : "string"
        },
        "subject" : {
          "type" : "string"
        },
        "snippet" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "meta" : {
          "type" : "string"
        },
        "number" : {
          "type" : "integer"
        },
        "last_seen_time" : {
          "type" : "integer"
        }
      }
    },
    "related_posts" : {
      "type" : "object"
    },
    "read_tag" : {
      "type" : "object",
      "properties" : {
        "tag" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "likes" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean"
        },
        "i_like" : {
          "type" : "boolean"
        },
        "like_count" : {
          "type" : "integer"
        },
        "meta" : {
          "type" : "object",
          "properties" : { }
        }
      }
    }
  }
}