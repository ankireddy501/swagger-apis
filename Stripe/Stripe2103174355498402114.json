{
  "swagger" : "2.0",
  "info" : {
    "description" : "Headline : Stripe is a company that provides a way for individuals and businesses to accept payments over the internet.",
    "version" : "v1",
    "title" : "Stripe"
  },
  "host" : "api.stripe.com",
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/account" : {
      "get" : {
        "summary" : "Retrieves the details of the account, based on the API key that was used to\r\nmake the request.\r\n",
        "description" : "Retrieves the details of the account, based on the API key t...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/account"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model836"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model297"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model743"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model706"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model12"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model854"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model720"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model407"
            }
          }
        }
      }
    },
    "/application_fees" : {
      "get" : {
        "summary" : "Returns a list of application fees you've previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.",
        "description" : "Returns a list of application fees you've previously collect...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "charge",
          "in" : "query",
          "description" : "Only return application fees for the charge specified by this charge ID.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be a string with an exact UTC timestamp, or it can be a dictionary with the following options",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/application_fees"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model953"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model56"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model250"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model560"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model508"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model39"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model841"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model980"
            }
          }
        }
      }
    },
    "/application_fees/{FEE_ID}" : {
      "get" : {
        "summary" : "Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.",
        "description" : "Retrieves the details of an application fee that your accoun...",
        "operationId" : "GET",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model960"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/application_fee"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model133"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model380"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model95"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model848"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model786"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model447"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model248"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model895"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FEE_ID",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/application_fees/{FEE_ID}/refund" : {
      "post" : {
        "summary" : "Refunds an application fee that has previously been collected but not yet refunded. Funds will be refunded to the Stripe account that the fee was originally collected from.\r\nYou can optionally refund only part of an application fee. You can do so as many times as you wish until the entire fee has been refunded.\r\nOnce entirely refunded, an application fee can't be refunded again. This method will return an error when called on an already-refunded application fee, or when trying to refund more money than is left on an application fee.\r\n",
        "description" : "Refunds an application fee that has previously been collecte...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model487"
          }
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/application_fee"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model510"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model262"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model903"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model122"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model150"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model705"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model520"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model591"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FEE_ID",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/balance" : {
      "get" : {
        "summary" : "Retrieves the current account balance, based on the API key that was used to\r\nmake the request.\r\n",
        "description" : "Retrieves the current account balance, based on the API key ...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/balance"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model753"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model816"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model11"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model518"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model88"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model622"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model18"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model170"
            }
          }
        }
      }
    },
    "/balance/history" : {
      "get" : {
        "summary" : "Returns a list of transactions that have contributed to the Stripe accoun\r\nbalance (includes charges, refunds, transfers, and so on). The transactions\r\nare returned in sorted order, with the most recent transactions appearing\r\nfirst.\r\n",
        "description" : "Returns a list of transactions that have contributed to the ...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "available_on",
          "in" : "query",
          "description" : "A filter on the list based on the object available_on field. The value\r\ncan be a string with an exact UTC timestamp, or it can be a dictionary\r\nwith the following options:\r\n  **gt**: optional Return values where the available_on field is after this timestamp.\r\n  **gte**: optional Return values where the available_on field is after or equal to this timestamp.\r\n  **lt**: optional Return values where the available_on field is before this timestamp.\r\n  **lte**: optional Return values where the available_on field is before or equal to this timestamp.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be\r\na string with an exact UTC timestamp, or it can be a dictionary with the\r\nfollowing options:\r\n  **gt**: optional Return values where the created field is after this timestamp.\r\n  **gte**: optional Return values where the created field is after or equal to this timestamp.\r\n  **lt**: optional Return values where the created field is before this timestamp.\r\n  **lte**: optional Return values where the created field is before or equal to this timestamp.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "currency",
          "in" : "query",
          "description" : "(Untitled)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "query",
          "description" : "(Untitled)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transfer",
          "in" : "query",
          "description" : "For automatic Stripe transfers only, only returns transactions tha\r\nwere transferred out on the specified transfer ID.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Only returns transactions of the given type. One of: charge, refund,\r\nadjustment, application_fee, application_fee_refund, transfer, or transfer_failure.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/balance_transactions"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model370"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model431"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model296"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model636"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model516"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model530"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model924"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model318"
            }
          }
        }
      }
    },
    "/balance/history/{TRANSACTION_ID}" : {
      "get" : {
        "summary" : "Retrieves the balance transaction with the given ID.",
        "description" : "Retrieves the balance transaction with the given ID.",
        "operationId" : "GET",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model557"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/balance_transaction"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model666"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model609"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model514"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model560"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model140"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model494"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model353"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model107"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TRANSACTION_ID",
        "in" : "path",
        "description" : "The ID of the desired balance transaction (as found on any API objec\r\nthat affects the balance, e.g. a charge or transfer).\r\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/charges" : {
      "get" : {
        "summary" : "Returns a list of charges you've previously created. The charges are returned in sorted order, with the most recent charges appearing first.\r\n",
        "description" : "Returns a list of charges you've previously created. The cha...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be a string with an exact UTC timestamp\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "Only return charges for the customer specified by this customer ID.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/charges"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model901"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model0"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model97"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model218"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model674"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model951"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model806"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model338"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creating a new charge (charging a credit card).\r\nTo charge a credit card, you create a new charge object. If your API key is in test mode, the supplied card won'\r\nactually be charged, though everything else will occur as if in live mode. (Stripe assumes that the charge would have\r\ncompleted successfully).\r\n",
        "description" : "Creating a new charge (charging a credit card).\r\nTo charge a ...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model745"
          }
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/charge"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model294"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model772"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model377"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model337"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model704"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model787"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model303"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model301"
            }
          }
        }
      }
    },
    "/charges/{CHARGE_ID}" : {
      "get" : {
        "summary" : "Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned\r\nfrom your previous request, and Stripe will return the corresponding charge information. The same information is\r\nreturned when creating or refunding the charge.\r\n",
        "description" : "Retrieves the details of a charge that has previously been c...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/charge"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model480"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model914"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model86"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model617"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model171"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model495"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model465"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model784"
            }
          }
        }
      },
      "post" : {
        "summary" : "Updates the specified charge by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
        "description" : "Updates the specified charge by setting the values of the pa...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model869"
          }
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/charge"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model492"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model239"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model218"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model20"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model195"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model474"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model603"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model454"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Charge ID",
        "in" : "path",
        "description" : "The identifier of the charge to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/charges/{CHARGE_ID}/capture" : {
      "post" : {
        "summary" : "Capture the payment of an existing, uncaptured, charge. This is the second half of the two-step payment flow, where first you created\r\na charge with the capture option set to false.\r\n\r\nUncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be\r\nmarked as refunded and will no longer be capturable.\r\n",
        "description" : "Capture the payment of an existing, uncaptured, charge. This...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model467"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/charge"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model871"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model234"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model759"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model618"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model351"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model571"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model217"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model265"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Charge ID",
        "in" : "path",
        "description" : "The identifier of the charge to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/charges/{CHARGE_ID}/dispute" : {
      "post" : {
        "summary" : "Contacting your customer is always the best first step, but if that doesn'\r\nwork, you can submit (text-only) evidence in order to help us resolve the\r\ndispute in your favor. You can do this in your dashboard, but if you prefer,\r\nyou can use the API to submit evidence programmatically.\r\n",
        "description" : "Contacting your customer is always the best first step, but ...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model266"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/dispute"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model434"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model403"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model271"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model457"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model48"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model938"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model152"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model978"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Charge ID",
        "in" : "path",
        "description" : "The identifier of the charge to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/charges/{CHARGE_ID}/dispute/close" : {
      "post" : {
        "summary" : "Closing the dispute for a charge indicates that you do not have any evidence\r\nto submit and are essentially 'dismissing' the dispute, acknowledging it as\r\nlost.\r\nThe status of the dispute will change from under_review to lost. Closing\r\na dispute is irreversible.\r\n",
        "description" : "Closing the dispute for a charge indicates that you do not h...",
        "operationId" : "POST",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/dispute"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model472"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model148"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model170"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model553"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model781"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model610"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model981"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model150"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Charge ID",
        "in" : "path",
        "description" : "The identifier of the charge to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/coupons" : {
      "get" : {
        "summary" : "Returns a list of your coupons.",
        "description" : "Returns a list of your coupons.",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/coupons"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model836"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model474"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model923"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model295"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model833"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model955"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model110"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model824"
            }
          }
        }
      },
      "post" : {
        "summary" : "You can create coupons easily via the coupon management page of the Stripe\r\ndashboard. Coupon creation is also accessible via the API if you need to\r\ncreate coupons on the fly.\r\nA coupon has either a percent_off or an amount_off and currency. If you se\r\nan amount_off, that amount will be subtracted from any invoice's subtotal.\r\nFor example, an invoice with a subtotal $10 will have a final total of -$10\r\nif a coupon with an amount_off of 2000 is applied to it.\r\n",
        "description" : "You can create coupons easily via the coupon management page...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model393"
          }
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/coupon"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model923"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model634"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model646"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model244"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model297"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model20"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model428"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model640"
            }
          }
        }
      }
    },
    "/coupons/{COUPON_ID}" : {
      "get" : {
        "summary" : "Retrieves the coupon with the given ID.",
        "description" : "Retrieves the coupon with the given ID.",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/coupon"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model38"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model584"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model987"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model297"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model621"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model717"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model517"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model739"
            }
          }
        }
      },
      "delete" : {
        "summary" : "You can delete coupons via the coupon management page of the Stripe dashboard.\r\nHowever, deleting a coupon does not affect any customers who have already\r\napplied the coupon; it means that new customers can't redeem the coupon. You\r\ncan also delete coupons via the API.\r\n",
        "description" : "You can delete coupons via the coupon management page of the...",
        "operationId" : "DELETE",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/delete"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model529"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model643"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model92"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model899"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model360"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model324"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model606"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model676"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "COUPON_ID",
        "in" : "path",
        "description" : "The ID of the desired coupon.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/customers" : {
      "get" : {
        "summary" : "Returns a list of your customers. The customers are returned sorted by creation date, with the most recently created customers appearing first.\r\n",
        "description" : "Returns a list of your customers. The customers are returned...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be a string with an exact UTC timestamp\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/customers"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model305"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model928"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model933"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model13"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model961"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model305"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model858"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model429"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a new customer object.\r\n",
        "description" : "Creates a new customer object.\r\n",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model795"
          }
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/customer"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model224"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model597"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model753"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model990"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model727"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model547"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model598"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model647"
            }
          }
        }
      }
    },
    "/customers/{CUSTOMER_ID}" : {
      "get" : {
        "summary" : "Retrieves the details of an existing customer.\r\n",
        "description" : "Retrieves the details of an existing customer.\r\n",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/customer"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model267"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model825"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model311"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model621"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model981"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model863"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model353"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model495"
            }
          }
        }
      },
      "post" : {
        "summary" : "Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will\r\nbe left unchanged. For example, if you pass the card parameter, that becomes the customer's active card to be\r\nused for all charges in future. When you update a customer to a new valid card, the last unpaid invoice (if one exists)\r\nwill be retried automatically.\r\n",
        "description" : "Updates the specified customer by setting the values of the ...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model870"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/customer"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model609"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model861"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model883"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model742"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model222"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model962"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model9"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model371"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Permanently deletes a customer. It cannot be undone.\r\n",
        "description" : "Permanently deletes a customer. It cannot be undone.\r\n",
        "operationId" : "DELETE",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/delete"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model694"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model778"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model99"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model497"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model334"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model26"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model625"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model866"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Customer ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/cards" : {
      "get" : {
        "summary" : "You can see a list of the customer's cards. Note that the 10 most recent cards are always available by default on the customer object.\r\nIf you need more than 10, you can use the listing API to page through the additional cards.\r\n",
        "description" : "You can see a list of the customer's cards. Note that the 10...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/cards"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model965"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model524"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model26"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model52"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model552"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model996"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model757"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model975"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creating a new card.\r\nWhen you create a new credit card, you must specify a customer.\r\n\r\nCreating a new credit card will not change the customer's default credit card automatically;\r\nyou should update the customer with a new default_card for that.\r\n",
        "description" : "Creating a new card.\r\nWhen you create a new credit card, you ...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model753"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/card"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model789"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model662"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model710"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model261"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model939"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model13"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model566"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model784"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Customer ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/cards/{CARD_ID}" : {
      "get" : {
        "summary" : "Retrieving a customer's card.\r\nBy default, you can see the 10 most recent cards stored on a customer directly on the customer object,\r\nbut you can also retrieve details about a specific card stored on the customer.\r\n",
        "description" : "Retrieving a customer's card.\r\nBy default, you can see the 10...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/card"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model973"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model325"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model190"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model512"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model238"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model366"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model261"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model228"
            }
          }
        }
      },
      "post" : {
        "summary" : "Updating a card.\r\nIf you need to update only some card details, like the billing address or expiration date, you can do so withou\r\nhaving to re-enter the full card details.\r\n\r\nWhen you update a card, Stripe will automatically validate the card.\r\n",
        "description" : "Updating a card.\r\nIf you need to update only some card detail...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model426"
          }
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/card"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model666"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model314"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model757"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model190"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model653"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model398"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model285"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model338"
            }
          }
        }
      },
      "delete" : {
        "summary" : "You can delete cards from a customer. If you delete a card that is currently a customer's default, the most recently\r\nadded card will be used as the new default. If you delete the customer's last remaining card, the default_card\r\nattribute on the customer will become null.\r\n\r\nNote that you may want to prevent customers on paid subscriptions from deleting all cards on file so that there\r\nis at least one default card for the next invoice payment attempt.\r\n",
        "description" : "You can delete cards from a customer. If you delete a card t...",
        "operationId" : "DELETE",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/delete"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model277"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model860"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model371"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model749"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model913"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model853"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model876"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model299"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Customer ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "Card ID",
        "in" : "path",
        "description" : "ID of card to retrieve",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/subscriptions" : {
      "get" : {
        "summary" : "You can see a list of the customer's active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the 'limit' and 'starting_after' parameters to page through additional subscriptions.",
        "description" : "You can see a list of the customer's active subscriptions. N...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)"
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model226"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model755"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model75"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model103"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model536"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model409"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model626"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model338"
            }
          }
        }
      },
      "post" : {
        "summary" : "Subscribes a customer to a plan, meaning the customer will be billed monthly\r\nstarting from signup. If the customer already has an active subscription,\r\nwe'll update it to the new plan and optionally prorate the price we charge\r\nnext month to make up for any price changes.\r\n",
        "description" : "Subscribes a customer to a plan, meaning the customer will b...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model268"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/subscription"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model522"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model590"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model430"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model275"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model319"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model404"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model833"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model166"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Customer ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/subscriptions/{SUBSCRIPTION_ID}" : {
      "get" : {
        "summary" : "Retrieving a customer's subscription\r\nBy default, you can see the 10 most recent active subscriptions stored on a customer directly on the customer object, but you can also retrieve details about a specific active subscription for a customer.\r\n",
        "description" : "Retrieving a customer's subscription\r\nBy default, you can see...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/subscription"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model172"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model324"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model436"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model209"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model136"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model877"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model454"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model771"
            }
          }
        }
      },
      "post" : {
        "summary" : "Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes.",
        "description" : "Updates an existing subscription on a customer to match the ...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model168"
          }
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/subscription"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model532"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model498"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model599"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model917"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model148"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model124"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model387"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model26"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Cancels the subscription if it exists. If you set the at_period_end parameter\r\nto true, the subscription will remain active until the end of the period, a\r\nwhich point it will be cancelled and not renewed. By default, the subscription\r\nis terminated immediately. In either case, the customer will not be charged\r\nagain for the subscription. Note, however, that any pending invoice items\r\nthat you've created will still be charged for at the end of the period unless\r\nmanually deleted.If you've set the subscription to cancel at period end, any\r\npending prorations will also be left in place and collected at the end of the\r\nperiod, but if the subscription is set to cancel immediately, pending prorations\r\nwill be removed.\r\nBy default, all unpaid invoices for the customer will be closed upon subscription\r\ncancellation. We do this in order to prevent unexpected payment retries once\r\nthe customer has canceled a subscription. However, you can reopen the invoices\r\nmanually after subscription cancellation to have us proceed with automatic\r\nretries, or you could even re-attempt payment yourself on all unpaid invoices\r\nbefore allowing the customer to cancel the subscription at all.\r\n",
        "description" : "Cancels the subscription if it exists. If you set the at_per...",
        "operationId" : "DELETE",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model920"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/delete"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model575"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model316"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model954"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model468"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model166"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model404"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model481"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model779"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Customer ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "SUBSCRIPTION_ID",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/subscriptions/{SUBSCRIPTION_ID}/discount" : {
      "delete" : {
        "summary" : "Removes the currently applied discount on a subscription.",
        "description" : "Removes the currently applied discount on a subscription.",
        "operationId" : "DELETE",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/delete"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model480"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model418"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model830"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model111"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model865"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model131"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model91"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model879"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SUBSCRIPTION_ID",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "Customer ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/events" : {
      "get" : {
        "summary" : "List events, going back (at least) up to 30 days.",
        "description" : "List events, going back (at least) up to 30 days.",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "A string containing a specific event name, or group of events using * as\r\na wildcard. The list will be filtered to include only events with a\r\nmatching event property\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be\r\na string with an exact UTC timestamp, or it can be a dictionary with the\r\nfollowing options:\r\n  **gt**: optional Return values where the created field is after this timestamp.\r\n  **gte**: optional Return values where the created field is after or equal to this timestamp.\r\n  **lt**: optional Return values where the created field is before this timestamp.\r\n  **lte**: optional Return values where the created field is before or equal to this timestamp.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/events"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model172"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model369"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model354"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model196"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model405"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model817"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model8"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model52"
            }
          }
        }
      }
    },
    "/events/{EVENT_ID}" : {
      "get" : {
        "summary" : "Retrieves the details of an event. Supply the unique identifier of the\r\nevent, which you might have received in a webhook.\r\n",
        "description" : "Retrieves the details of an event. Supply the unique identif...",
        "operationId" : "GET",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model553"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/event"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model446"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model942"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model239"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model862"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model587"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model493"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model424"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model268"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EVENT_ID",
        "in" : "path",
        "description" : "The identifier of the event.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/invoiceitems" : {
      "get" : {
        "summary" : "Returns a list of your invoice items. Invoice Items are returned sorted by\r\ncreation date, with the most recently created invoice items appearing first.\r\n",
        "description" : "Returns a list of your invoice items. Invoice Items are retu...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "customer",
          "in" : "query",
          "description" : "The identifier of the customer whose invoice items to return. If none is\r\nprovided, all invoice items will be returned.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be\r\na string with an exact UTC timestamp, or it can be a dictionary with the\r\nfollowing options:\r\n  **gt**: optional Return values where the created field is after this timestamp.\r\n  **gte**: optional Return values where the created field is after or equal to this timestamp.\r\n  **lt**: optional Return values where the created field is before this timestamp.\r\n  **lte**: optional Return values where the created field is before or equal to this timestamp.\r\n  **customer**: optional The identifier of the customer whose invoice items to return. If none is provided, all invoice items will be returned.\r\n  **offset**: optional  default is 0 An offset into the list of returned items. The API will return the requested number of items starting at that offset.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/invoice_items"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model113"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model140"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model179"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model129"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model369"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model658"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model505"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model474"
            }
          }
        }
      },
      "post" : {
        "summary" : "Adds an arbitrary charge or credit to the customer's upcoming invoice.\r\n",
        "description" : "Adds an arbitrary charge or credit to the customer's upcomin...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model63"
          }
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/invoice_item"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model528"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model804"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model354"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model599"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model693"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model492"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model486"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model922"
            }
          }
        }
      }
    },
    "/invoices" : {
      "get" : {
        "summary" : "You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.",
        "description" : "You can list all invoices, or list the invoices for a specif...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "The identifier of the customer whose invoices to return. If none is provided, all invoices will be returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "A filter on the list based on the object date field. The value can be a string with an exact UTC timestamp, or it can be a dictionary with the following options",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/invoices"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model977"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model763"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model667"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model159"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model336"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model8"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model612"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model370"
            }
          }
        }
      },
      "post" : {
        "summary" : "If you need to invoice your customer outside the regular billing cycle, you\r\ncan create an invoice that pulls in all pending invoice items, including\r\nprorations. The customer's billing cycle and regular subscription won't be\r\naffected.\r\nOnce you create the invoice, it'll be picked up and paid automatically,\r\nthough you can choose to pay it right away.\r\n",
        "description" : "If you need to invoice your customer outside the regular bil...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model811"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/invoice"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model626"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model542"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model448"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model494"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model38"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model319"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model310"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model601"
            }
          }
        }
      }
    },
    "/invoices/upcoming" : {
      "get" : {
        "summary" : "At any time, you can view the upcoming invoice for a customer. This will\r\nshow you all the charges that are pending, including subscription renewal\r\ncharges, invoice item charges, etc. It will also show you any discoun\r\nthat is applicable to the customer.\r\n",
        "description" : "At any time, you can view the upcoming invoice for a custome...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "customer",
          "in" : "query",
          "description" : "The identifier of the customer whose upcoming invoice you'd like to retrieve.\r\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscription",
          "in" : "query",
          "description" : "The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/invoice"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model775"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model955"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model313"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model185"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model292"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model219"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model342"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model561"
            }
          }
        }
      }
    },
    "/invoices/{INVOICE_ID}" : {
      "get" : {
        "summary" : "Retrieves the invoice with the given ID.\r\nReturns an invoice object if a valid invoice ID was provided. Returns an\r\nerror otherwise.\r\nThe invoice object contains a lines hash that contains information about the\r\nsubscriptions and invoice items that have been applied to the invoice, as\r\nwell as any prorations that Stripe has automatically calculated. Each line\r\non the invoice has an amount attribute that represents the amount actually\r\ncontributed to the invoice's total. For invoice items and prorations, the\r\namount attribute is the same as for the invoice item or proration respectively.\r\nFor subscriptions, the amount may be different from the plan's regular price\r\ndepending on whether the invoice covers a trial period or the invoice period\r\ndiffers from the plan's usual interval.\r\nThe invoice object has both a subtotal and a total. The subtotal represents\r\nthe total before any discounts, while the total is the final amount to be\r\ncharged to the customer after all coupons have been applied.\r\nThe invoice also has a next_payment_attempt attribute that tells you the nex\r\ntime (as a UTC timestamp) payment for the invoice will be automatically\r\nattempted. For invoices that have been closed or that have reached the maximum\r\nnumber of retries (specified in your retry settings) , the next_payment_attemp\r\nwill be null.\r\n",
        "description" : "Retrieves the invoice with the given ID.\r\nReturns an invoice ...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/invoice"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model649"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model48"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model290"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model24"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model465"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model489"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model51"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model324"
            }
          }
        }
      },
      "post" : {
        "summary" : "Until an invoice is paid, it is marked as open (closed=false). If you'd like to\r\nstop Stripe from automatically attempting payment on an invoice or would simply\r\nlike to close the invoice out as no longer owed by the customer, you can update\r\nthe closed parameter.\r\n",
        "description" : "Until an invoice is paid, it is marked as open (closed=false...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model308"
          }
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/invoice"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model805"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model344"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model783"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model647"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model796"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model331"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model256"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model849"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "INVOICE_ID",
        "in" : "path",
        "description" : "The identifier of the desired invoice.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/invoices/{INVOICE_ID}/lines" : {
      "get" : {
        "summary" : "When retrieving an invoice, you'll get a lines property containing the total\r\ncount of line items and the first handful of those items. There is also a URL\r\nwhere you can retrieve the full (paginated) list of line items.\r\n",
        "description" : "When retrieving an invoice, you'll get a lines property cont...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription",
          "in" : "query",
          "description" : "In the case of upcoming invoices, the subscription of the upcoming invoice is optional. In other cases it is ignored.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "The id of the invoice containing the lines to be retrieved\r\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "In the case of upcoming invoices, the customer of the upcoming invoice\r\nis required. In other cases it is ignored.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/invoice-line_items"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model432"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model283"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model625"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model20"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model141"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model737"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model214"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model668"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "INVOICE_ID",
        "in" : "path",
        "description" : "The identifier of the desired invoice.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/invoices/{INVOICE_ID}/pay" : {
      "post" : {
        "summary" : "Stripe automatically creates and then attempts to pay invoices for customers\r\non subscriptions. We'll also retry unpaid invoices according to your retry\r\nsettings. However, if you'd like to attempt to collect payment on an invoice\r\nout of the normal retry schedule or for some other reason, you can do so.\r\n",
        "description" : "Stripe automatically creates and then attempts to pay invoic...",
        "operationId" : "POST",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/invoice"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model364"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model904"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model214"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model354"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model697"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model379"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model227"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model856"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "INVOICE_ID",
        "in" : "path",
        "description" : "The identifier of the desired invoice.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/plans" : {
      "get" : {
        "summary" : "Returns a list of your plans.",
        "description" : "Returns a list of your plans.",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/plans"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model234"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model774"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model553"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model392"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model529"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model517"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model26"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model879"
            }
          }
        }
      },
      "post" : {
        "summary" : "You can create plans easily via the plan management page of the Stripe dashboard.\r\nPlan creation is also accessible via the API if you need to create plans on\r\nthe fly.\r\n",
        "description" : "You can create plans easily via the plan management page of ...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model305"
          }
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/plan"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model770"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model924"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model140"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model983"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model685"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model948"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model91"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model496"
            }
          }
        }
      }
    },
    "/plans/{PLAN_ID}" : {
      "get" : {
        "summary" : "Retrieves the plan with the given ID.",
        "description" : "Retrieves the plan with the given ID.",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/plan"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model807"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model401"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model428"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model798"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model307"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model849"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model851"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model557"
            }
          }
        }
      },
      "post" : {
        "summary" : "Updates the name of a plan. Other plan details (price, interval, etc.) are,\r\nby design, not editable.\r\n",
        "description" : "Updates the name of a plan. Other plan details (price, inter...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model484"
          }
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/plan"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model105"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model963"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model464"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model796"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model98"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model326"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model56"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model993"
            }
          }
        }
      },
      "delete" : {
        "summary" : "You can delete plans via the plan management page of the Stripe dashboard.\r\nHowever, deleting a plan does not affect any current subscribers to the plan;\r\nit merely means that new subscribers can't be added to that plan. You can\r\nalso delete plans via the API.\r\n",
        "description" : "You can delete plans via the plan management page of the Str...",
        "operationId" : "DELETE",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/delete"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model51"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model617"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model660"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model895"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model148"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model357"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model397"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model189"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PLAN_ID",
        "in" : "path",
        "description" : "The ID of the desired plan.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/recipients" : {
      "get" : {
        "summary" : "Returns a list of your recipients. The recipients are returned sorted by\r\ncreation date, with the most recently created recipient appearing first.\r\n",
        "description" : "Returns a list of your recipients. The recipients are return...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "verified",
          "in" : "query",
          "description" : "Only return recipients that are verified or unverified.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/recipients"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model54"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model884"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model276"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model564"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model353"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model173"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model855"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model880"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a new recipient object and verifies both the recipient identity and\r\nbank account information.\r\n",
        "description" : "Creates a new recipient object and verifies both the recipie...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model996"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/recipient"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model677"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model86"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model974"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model721"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model855"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model19"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model127"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model483"
            }
          }
        }
      }
    },
    "/recipients/{recipient_ID}" : {
      "get" : {
        "summary" : "Retrieves the details of an existing recipient. You need only supply the\r\nunique recipient identifier that was returned upon recipient creation.\r\n",
        "description" : "Retrieves the details of an existing recipient. You need onl...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/recipient"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model463"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model389"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model760"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model323"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model427"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model453"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model283"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model761"
            }
          }
        }
      },
      "post" : {
        "summary" : "Updates the specified recipient by setting the values of the parameters\r\npassed. Any parameters not provided will be left unchanged.\r\nIf you update the name or tax ID, the identity verification will automatically\r\nbe rerun. If you update the bank account, the bank account validation will\r\nautomatically be rerun.\r\n",
        "description" : "Updates the specified recipient by setting the values of the...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model534"
          }
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/recipient"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model62"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model622"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model422"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model382"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model53"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model655"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model377"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model185"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Permanently deletes a recipient. It cannot be undone.\r\n",
        "description" : "Permanently deletes a recipient. It cannot be undone.\r\n",
        "operationId" : "DELETE",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/delete"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model518"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model722"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model586"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model609"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model146"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model43"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model419"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model804"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "recipient_ID",
        "in" : "path",
        "description" : "The identifier of the recipient to be retrieved.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/tokens" : {
      "post" : {
        "summary" : "Creates a single use token that wraps the details of a credit card. This\r\ntoken can be used in place of a credit card dictionary with any API method.\r\nThese tokens can only be used once: by creating a new charge object, or\r\nattaching them to a customer.\r\n",
        "description" : "Creates a single use token that wraps the details of a credi...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model810"
          }
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/token"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model610"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model740"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model684"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model369"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model456"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model433"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model260"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model724"
            }
          }
        }
      }
    },
    "/tokens/{ID}" : {
      "get" : {
        "summary" : "Retrieves the token with the given ID.",
        "description" : "Retrieves the token with the given ID.",
        "operationId" : "GET",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model264"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/token"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model661"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model462"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model795"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model863"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model484"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model49"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model112"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model440"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ID",
        "in" : "path",
        "description" : "ID of a token.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/transfers" : {
      "get" : {
        "summary" : "Returns a list of existing transfers sent to third-party bank accounts or\r\nthat Stripe has sent you. The transfers are returned in sorted order, with\r\nthe most recent transfers appearing first.\r\n",
        "description" : "Returns a list of existing transfers sent to third-party ban...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "A filter on the list based on the object date field. The value can be a\r\nstring with an exact UTC timestamp, or it can be a dictionary with the\r\nfollowing options:\r\n  **gt**: optional Return values where the date field is after this timestamp.\r\n  **gte**: optional Return values where the date field is after or equal to this timestamp.\r\n  **lt**: optional Return values where the date field is before this timestamp.\r\n  **lte**: optional Return values where the date field is before or equal to this timestamp.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Only return transfers that have the given status: pending, paid, or failed.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "recipient",
          "in" : "query",
          "description" : "Only return transfers for the recipient specified by this recipient ID.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be a string with an exact UTC timestamp, or it can be a dictionary with the following options:\r\n\r\n**gt** optional Return values where the created field is after this timestamp.\r\n**gte** optional Return values where the created field is after or equal to this timestamp.\r\n**lt** optional Return values where the created field is before this timestamp.\r\n**lte** optional Return values where the created field is before or equal to this timestamp.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/transfers"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model260"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model893"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model48"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model867"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model22"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model848"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model229"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model598"
            }
          }
        }
      },
      "post" : {
        "summary" : "To send funds from your Stripe account to a third-party bank account, you\r\ncreate a new transfer object. Your Stripe balance must be able to cover\r\nthe transfer amount, or you'll receive an \"Insufficient Funds\" error.\r\nIf your API key is in test mode, money won't actually be sent, though\r\neverything else will occur as if in live mode.\r\n",
        "description" : "To send funds from your Stripe account to a third-party bank...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model251"
          }
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/transfer"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model356"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model956"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model214"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model921"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model24"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model345"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model793"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model214"
            }
          }
        }
      }
    },
    "/transfers/{transfer_ID}" : {
      "get" : {
        "summary" : "Retrieves the details of an existing transfer. Supply the unique transfer ID\r\nfrom either a transfer creation request or the transfer list, and Stripe will\r\nreturn the corresponding transfer information.\r\n",
        "description" : "Retrieves the details of an existing transfer. Supply the un...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/transfer"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model675"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model674"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model606"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model40"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model456"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model897"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model341"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model349"
            }
          }
        }
      },
      "post" : {
        "summary" : "Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
        "description" : "Updates the specified transfer by setting the values of the ...",
        "operationId" : "POST",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model176"
          }
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/transfer"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model41"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model821"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model191"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model820"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model175"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model234"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model926"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model715"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "transfer_ID",
        "in" : "path",
        "description" : "The identifier of the transfer.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/transfers/{transfer_ID}/cancel" : {
      "post" : {
        "summary" : "Cancels a transfer that has previously been created. Funds will be refunded\r\nto your available balance, and the fees you were originally charged on the\r\ntransfer will be refunded. You may not cancel transfers that have already\r\nbeen paid out, or automatic Stripe transfers.\r\n",
        "description" : "Cancels a transfer that has previously been created. Funds w...",
        "operationId" : "POST",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\r\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\r\n\r\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\r\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\r\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\r\nobject. You can expand multiple things at once by sending an array.\r\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\r\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)"
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model177"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model872"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model843"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model595"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model741"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model914"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model386"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\r\n",
            "schema" : {
              "$ref" : "#/definitions/model722"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "transfer_ID",
        "in" : "path",
        "description" : "The identifier of the transfer.",
        "required" : false,
        "type" : "string"
      } ]
    }
  },
  "definitions" : {
    "model299" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model177" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model179" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "coupons" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "currency" : {
                "type" : "string"
              },
              "duration_in_months" : {
                "type" : "number"
              },
              "duration" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "livemode" : {
                "type" : "boolean"
              },
              "object" : {
                "type" : "string"
              },
              "percent_off" : {
                "type" : "number"
              },
              "times_redeemed" : {
                "type" : "number"
              }
            }
          }
        }
      }
    },
    "model170" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model290" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model172" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model292" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model171" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model295" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model173" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model294" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model297" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model296" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model175" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model190" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model189" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "charges" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "number"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount_refunded" : {
                "type" : "number"
              },
              "amount" : {
                "type" : "number"
              },
              "balance_transaction" : {
                "type" : "string"
              },
              "captured" : {
                "type" : "boolean"
              },
              "card" : {
                "type" : "object",
                "properties" : {
                  "country" : {
                    "type" : "string"
                  },
                  "exp_month" : {
                    "type" : "number"
                  },
                  "exp_year" : {
                    "type" : "number"
                  },
                  "fingerprint" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "last4" : {
                    "type" : "string"
                  },
                  "object" : {
                    "type" : "string"
                  },
                  "type" : {
                    "type" : "string"
                  }
                }
              },
              "created" : {
                "type" : "number"
              },
              "currency" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "livemode" : {
                "type" : "boolean"
              },
              "object" : {
                "type" : "string"
              },
              "paid" : {
                "type" : "boolean"
              },
              "refunded" : {
                "type" : "boolean"
              },
              "refunds" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "number"
                    },
                    "balance_transaction" : {
                      "type" : "string"
                    },
                    "created" : {
                      "type" : "number"
                    },
                    "currency" : {
                      "type" : "string"
                    },
                    "object" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "plans" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "number"
              },
              "currency" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "interval_count" : {
                "type" : "number"
              },
              "interval" : {
                "type" : "string"
              },
              "livemode" : {
                "type" : "boolean"
              },
              "name" : {
                "type" : "string"
              },
              "object" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "model185" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model191" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "customers" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "number"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "account_balance" : {
                "type" : "number"
              },
              "cards" : {
                "type" : "object",
                "properties" : {
                  "count" : {
                    "type" : "number"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "country" : {
                          "type" : "string"
                        },
                        "customer" : {
                          "type" : "string"
                        },
                        "exp_month" : {
                          "type" : "number"
                        },
                        "exp_year" : {
                          "type" : "number"
                        },
                        "fingerprint" : {
                          "type" : "string"
                        },
                        "id" : {
                          "type" : "string"
                        },
                        "last4" : {
                          "type" : "string"
                        },
                        "object" : {
                          "type" : "string"
                        },
                        "type" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "object" : {
                    "type" : "string"
                  },
                  "url" : {
                    "type" : "string"
                  }
                }
              },
              "created" : {
                "type" : "number"
              },
              "default_card" : {
                "type" : "string"
              },
              "delinquent" : {
                "type" : "boolean"
              },
              "email" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "livemode" : {
                "type" : "boolean"
              },
              "object" : {
                "type" : "string"
              },
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "cancel_at_period_end" : {
                    "type" : "boolean"
                  },
                  "current_period_end" : {
                    "type" : "number"
                  },
                  "current_period_start" : {
                    "type" : "number"
                  },
                  "customer" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "object" : {
                    "type" : "string"
                  },
                  "plan" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "type" : "number"
                      },
                      "currency" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "interval_count" : {
                        "type" : "number"
                      },
                      "interval" : {
                        "type" : "string"
                      },
                      "livemode" : {
                        "type" : "boolean"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "object" : {
                        "type" : "string"
                      }
                    }
                  },
                  "quantity" : {
                    "type" : "number"
                  },
                  "start" : {
                    "type" : "number"
                  },
                  "status" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "model196" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model195" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "charge" : {
      "type" : "object",
      "properties" : {
        "amount_refunded" : {
          "type" : "number"
        },
        "amount" : {
          "type" : "number"
        },
        "balance_transaction" : {
          "type" : "string"
        },
        "captured" : {
          "type" : "boolean"
        },
        "card" : {
          "type" : "object",
          "properties" : {
            "country" : {
              "type" : "string"
            },
            "cvc_check" : {
              "type" : "string"
            },
            "exp_month" : {
              "type" : "number"
            },
            "exp_year" : {
              "type" : "number"
            },
            "fingerprint" : {
              "type" : "string"
            },
            "id" : {
              "type" : "string"
            },
            "last4" : {
              "type" : "string"
            },
            "object" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        },
        "created" : {
          "type" : "number"
        },
        "currency" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "livemode" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "string"
        },
        "paid" : {
          "type" : "boolean"
        },
        "refunded" : {
          "type" : "boolean"
        }
      }
    },
    "invoice-line_items" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "number"
              },
              "currency" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "livemode" : {
                "type" : "boolean"
              },
              "object" : {
                "type" : "string"
              },
              "period" : {
                "type" : "object",
                "properties" : {
                  "end" : {
                    "type" : "number"
                  },
                  "start" : {
                    "type" : "number"
                  }
                }
              },
              "proration" : {
                "type" : "boolean"
              },
              "type" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "model219" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model218" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model453" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model694" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model331" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model334" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model697" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model454" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model575" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "balance" : {
      "type" : "object",
      "properties" : {
        "available" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "number"
              },
              "currency" : {
                "type" : "string"
              }
            }
          }
        },
        "livemode" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "string"
        },
        "pending" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "number"
              },
              "currency" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "model336" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model457" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model214" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model456" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model338" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model217" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model337" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model693" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model571" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model91" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model92" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model95" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model97" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model99" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model229" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model98" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model222" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model464" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model463" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model342" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model584" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model587" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model224" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model345" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model103" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model586" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model465" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model344" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model226" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model468" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model105" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model228" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model107" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model349" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model227" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model462" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model341" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "subscription" : {
      "type" : "object",
      "properties" : {
        "cancel_at_period_end" : {
          "type" : "boolean"
        },
        "current_period_end" : {
          "type" : "number"
        },
        "current_period_start" : {
          "type" : "number"
        },
        "customer" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "object" : {
          "type" : "string"
        },
        "plan" : {
          "type" : "object",
          "properties" : {
            "amount" : {
              "type" : "number"
            },
            "currency" : {
              "type" : "string"
            },
            "id" : {
              "type" : "string"
            },
            "interval_count" : {
              "type" : "number"
            },
            "interval" : {
              "type" : "string"
            },
            "livemode" : {
              "type" : "boolean"
            },
            "name" : {
              "type" : "string"
            },
            "object" : {
              "type" : "string"
            }
          }
        },
        "quantity" : {
          "type" : "number"
        },
        "start" : {
          "type" : "number"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "model354" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model112" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model353" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model595" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model111" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model474" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model598" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model356" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model597" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model113" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model234" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model599" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model357" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model239" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model238" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model590" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model591" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model110" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model351" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model472" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model486" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model244" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model122" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model364" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model366" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model124" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model127" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model369" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model248" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model489" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model129" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model480" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model360" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model481" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model484" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model483" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model497" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model133" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model496" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model136" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model377" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model256" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model498" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model379" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model370" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model493" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model371" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model250" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model492" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model495" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model494" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model131" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model387" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model386" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model265" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model268" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model389" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model146" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model267" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model148" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "application_fee" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "object" : {
          "type" : "string"
        },
        "created" : {
          "type" : "number"
        },
        "livemode" : {
          "type" : "boolean"
        },
        "amount" : {
          "type" : "number"
        },
        "currency" : {
          "type" : "string"
        },
        "refunded" : {
          "type" : "boolean"
        },
        "amount_refunded" : {
          "type" : "number"
        },
        "balance_transaction" : {
          "type" : "string"
        },
        "account" : {
          "type" : "string"
        },
        "application" : {
          "type" : "string"
        },
        "charge" : {
          "type" : "string"
        }
      }
    },
    "model260" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model380" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model262" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model141" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model261" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model140" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model382" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "delete" : {
      "type" : "object",
      "properties" : {
        "deleted" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "model277" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model398" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model276" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model397" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model159" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model150" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model392" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model271" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model152" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model275" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model166" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model283" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model285" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model20" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model22" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model978" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model856" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model977" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model24" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model617" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model858" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model737" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model26" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model618" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model739" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model851" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model974" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model853" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model973" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model610" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model855" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model854" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model975" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model612" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "events" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        }
      }
    },
    "model505" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model11" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model626" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model625" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model867" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model749" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model13" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model12" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model508" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model19" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model860" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model981" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model980" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model18" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model741" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model862" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model983" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model861" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model740" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model743" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model622" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model863" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model742" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model621" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "recipients" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "active_account" : {
                "type" : "object",
                "properties" : {
                  "bank_name" : {
                    "type" : "string"
                  },
                  "country" : {
                    "type" : "string"
                  },
                  "currency" : {
                    "type" : "string"
                  },
                  "fingerprint" : {
                    "type" : "string"
                  },
                  "last4" : {
                    "type" : "string"
                  },
                  "object" : {
                    "type" : "string"
                  },
                  "validated" : {
                    "type" : "boolean"
                  }
                }
              },
              "created" : {
                "type" : "number"
              },
              "email" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "livemode" : {
                "type" : "boolean"
              },
              "metadata" : {
                "type" : "object",
                "properties" : { }
              },
              "name" : {
                "type" : "string"
              },
              "object" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string"
              },
              "verified" : {
                "type" : "boolean"
              }
            }
          }
        }
      }
    },
    "model866" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model987" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model865" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "balance_transaction" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number"
        },
        "available_on" : {
          "type" : "number"
        },
        "created" : {
          "type" : "number"
        },
        "currency" : {
          "type" : "string"
        },
        "fee_details" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "number"
              },
              "currency" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string"
              }
            }
          }
        },
        "fee" : {
          "type" : "number"
        },
        "id" : {
          "type" : "string"
        },
        "net" : {
          "type" : "number"
        },
        "object" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "invoice_items" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "number"
              },
              "currency" : {
                "type" : "string"
              },
              "customer" : {
                "type" : "string"
              },
              "date" : {
                "type" : "number"
              },
              "description" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "livemode" : {
                "type" : "boolean"
              },
              "object" : {
                "type" : "string"
              },
              "proration" : {
                "type" : "boolean"
              }
            }
          }
        }
      }
    },
    "model40" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model41" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model516" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model879" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model636" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model757" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model43" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model518" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model759" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model517" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model48" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model49" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model871" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model510" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model872" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model993" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "balance_transactions" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "number"
              },
              "available_on" : {
                "type" : "number"
              },
              "created" : {
                "type" : "number"
              },
              "currency" : {
                "type" : "string"
              },
              "fee_details" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "number"
                    },
                    "currency" : {
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "type" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "fee" : {
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "net" : {
                "type" : "number"
              },
              "object" : {
                "type" : "string"
              },
              "source" : {
                "type" : "string"
              },
              "status" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "model512" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model996" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model753" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model514" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model877" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model876" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model634" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model755" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model990" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model8" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model405" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model647" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model529" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model407" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model528" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model649" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model0" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model409" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model39" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model38" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model761" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model640" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model760" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model884" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model763" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model520" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model883" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model643" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model522" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model401" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model646" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model404" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model524" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model403" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model9" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model880" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model62" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model658" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model779" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model419" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model418" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model530" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model772" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model893" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model771" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model653" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model895" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model532" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model774" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model655" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model897" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model775" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model778" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model899" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model536" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model770" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model51" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model53" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model52" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model428" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model307" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model54" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model427" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model429" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model56" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model662" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model783" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model661" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model301" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model422" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model784" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model542" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model787" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model303" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model666" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model424" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model786" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model305" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model547" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model789" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model668" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model667" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model781" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model660" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "cards" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "number"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "country" : {
                "type" : "string"
              },
              "cvc_check" : {
                "type" : "string"
              },
              "exp_month" : {
                "type" : "number"
              },
              "exp_year" : {
                "type" : "number"
              },
              "fingerprint" : {
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "last4" : {
                "type" : "string"
              },
              "object" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string"
              }
            }
          }
        },
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "model86" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model318" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model88" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model319" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model431" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model552" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model310" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model793" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model430" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model796" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model675" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model433" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model674" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model795" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model311" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model432" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model553" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model677" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model314" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model798" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model313" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model676" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model434" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model316" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model436" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model557" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model75" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model209" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model684" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model323" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model564" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model685" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model325" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model446" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model566" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model324" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model448" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model447" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model326" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "recipient" : {
      "type" : "object",
      "properties" : {
        "active_account" : {
          "type" : "object",
          "properties" : {
            "bank_name" : {
              "type" : "string"
            },
            "country" : {
              "type" : "string"
            },
            "currency" : {
              "type" : "string"
            },
            "fingerprint" : {
              "type" : "string"
            },
            "last4" : {
              "type" : "string"
            },
            "object" : {
              "type" : "string"
            },
            "validated" : {
              "type" : "boolean"
            }
          }
        },
        "created" : {
          "type" : "number"
        },
        "email" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "livemode" : {
          "type" : "boolean"
        },
        "metadata" : {
          "type" : "object",
          "properties" : { }
        },
        "name" : {
          "type" : "string"
        },
        "object" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "verified" : {
          "type" : "boolean"
        }
      }
    },
    "model440" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model561" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model560" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "invoices" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount_due" : {
                "type" : "number"
              },
              "attempt_count" : {
                "type" : "number"
              },
              "attempted" : {
                "type" : "boolean"
              },
              "closed" : {
                "type" : "boolean"
              },
              "currency" : {
                "type" : "string"
              },
              "customer" : {
                "type" : "string"
              },
              "date" : {
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lines" : {
                "type" : "object",
                "properties" : {
                  "count" : {
                    "type" : "number"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "amount" : {
                          "type" : "number"
                        },
                        "currency" : {
                          "type" : "string"
                        },
                        "id" : {
                          "type" : "string"
                        },
                        "livemode" : {
                          "type" : "boolean"
                        },
                        "object" : {
                          "type" : "string"
                        },
                        "period" : {
                          "type" : "object",
                          "properties" : {
                            "end" : {
                              "type" : "number"
                            },
                            "start" : {
                              "type" : "number"
                            }
                          }
                        },
                        "plan" : {
                          "type" : "object",
                          "properties" : {
                            "amount" : {
                              "type" : "number"
                            },
                            "currency" : {
                              "type" : "string"
                            },
                            "id" : {
                              "type" : "string"
                            },
                            "interval_count" : {
                              "type" : "number"
                            },
                            "interval" : {
                              "type" : "string"
                            },
                            "livemode" : {
                              "type" : "boolean"
                            },
                            "name" : {
                              "type" : "string"
                            },
                            "object" : {
                              "type" : "string"
                            }
                          }
                        },
                        "proration" : {
                          "type" : "boolean"
                        },
                        "quantity" : {
                          "type" : "number"
                        },
                        "type" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "object" : {
                    "type" : "string"
                  },
                  "url" : {
                    "type" : "string"
                  }
                }
              },
              "livemode" : {
                "type" : "boolean"
              },
              "object" : {
                "type" : "string"
              },
              "paid" : {
                "type" : "boolean"
              },
              "period_end" : {
                "type" : "number"
              },
              "period_start" : {
                "type" : "number"
              },
              "starting_balance" : {
                "type" : "number"
              },
              "subtotal" : {
                "type" : "number"
              },
              "total" : {
                "type" : "number"
              }
            }
          }
        }
      }
    },
    "plan" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number"
        },
        "currency" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "interval_count" : {
          "type" : "number"
        },
        "interval" : {
          "type" : "string"
        },
        "livemode" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "object" : {
          "type" : "string"
        }
      }
    },
    "model901" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model903" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model904" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "invoice_item" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number"
        },
        "currency" : {
          "type" : "string"
        },
        "customer" : {
          "type" : "string"
        },
        "date" : {
          "type" : "number"
        },
        "description" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "livemode" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "string"
        },
        "proration" : {
          "type" : "boolean"
        }
      }
    },
    "application_fees" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        }
      }
    },
    "card" : {
      "type" : "object",
      "properties" : {
        "country" : {
          "type" : "string"
        },
        "cvc_check" : {
          "type" : "string"
        },
        "exp_month" : {
          "type" : "number"
        },
        "exp_year" : {
          "type" : "number"
        },
        "fingerprint" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "last4" : {
          "type" : "string"
        },
        "object" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "model914" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model913" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model917" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "transfers" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "count" : {
          "type" : "number"
        }
      }
    },
    "event" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "number"
        },
        "data" : {
          "type" : "object",
          "properties" : {
            "object" : {
              "type" : "object",
              "properties" : {
                "amount_refunded" : {
                  "type" : "number"
                },
                "amount" : {
                  "type" : "number"
                },
                "balance_transaction" : {
                  "type" : "string"
                },
                "captured" : {
                  "type" : "boolean"
                },
                "card" : {
                  "type" : "object",
                  "properties" : {
                    "country" : {
                      "type" : "string"
                    },
                    "cvc_check" : {
                      "type" : "string"
                    },
                    "exp_month" : {
                      "type" : "number"
                    },
                    "exp_year" : {
                      "type" : "number"
                    },
                    "fingerprint" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "last4" : {
                      "type" : "string"
                    },
                    "object" : {
                      "type" : "string"
                    },
                    "type" : {
                      "type" : "string"
                    }
                  }
                },
                "created" : {
                  "type" : "number"
                },
                "currency" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "livemode" : {
                  "type" : "boolean"
                },
                "metadata" : {
                  "type" : "object",
                  "properties" : { }
                },
                "object" : {
                  "type" : "string"
                },
                "paid" : {
                  "type" : "boolean"
                },
                "refunded" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "id" : {
          "type" : "string"
        },
        "livemode" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "string"
        },
        "pending_webhooks" : {
          "type" : "number"
        },
        "request" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "dispute" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number"
        },
        "balance_transaction" : {
          "type" : "string"
        },
        "charge" : {
          "type" : "string"
        },
        "created" : {
          "type" : "number"
        },
        "currency" : {
          "type" : "string"
        },
        "evidence_due_by" : {
          "type" : "number"
        },
        "livemode" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "string"
        },
        "reason" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "coupon" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string"
        },
        "duration_in_months" : {
          "type" : "number"
        },
        "duration" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "livemode" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "string"
        },
        "percent_off" : {
          "type" : "number"
        },
        "times_redeemed" : {
          "type" : "number"
        }
      }
    },
    "model923" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model922" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model804" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model924" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model806" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model805" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model926" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model928" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "token" : {
      "type" : "object",
      "properties" : {
        "card" : {
          "type" : "object",
          "properties" : {
            "country" : {
              "type" : "string"
            },
            "exp_month" : {
              "type" : "number"
            },
            "exp_year" : {
              "type" : "number"
            },
            "fingerprint" : {
              "type" : "string"
            },
            "id" : {
              "type" : "string"
            },
            "last4" : {
              "type" : "string"
            },
            "object" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        },
        "created" : {
          "type" : "number"
        },
        "id" : {
          "type" : "string"
        },
        "livemode" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "used" : {
          "type" : "boolean"
        }
      }
    },
    "model807" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model921" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model933" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model817" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model938" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model816" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model939" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model824" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model705" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model704" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model825" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model706" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model948" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model820" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model942" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model821" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model956" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model955" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model836" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model715" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model717" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model710" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model951" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model830" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model833" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model954" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model953" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model724" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model603" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model727" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model848" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model606" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model849" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model609" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model961" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model721" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model963" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model720" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model962" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model841" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model965" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model843" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model722" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "model601" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "param" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "invoice" : {
      "type" : "object",
      "properties" : {
        "amount_due" : {
          "type" : "number"
        },
        "attempt_count" : {
          "type" : "number"
        },
        "attempted" : {
          "type" : "boolean"
        },
        "closed" : {
          "type" : "boolean"
        },
        "currency" : {
          "type" : "string"
        },
        "customer" : {
          "type" : "string"
        },
        "date" : {
          "type" : "number"
        },
        "id" : {
          "type" : "string"
        },
        "lines" : {
          "type" : "object",
          "properties" : {
            "count" : {
              "type" : "number"
            },
            "data" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "number"
                  },
                  "currency" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "livemode" : {
                    "type" : "boolean"
                  },
                  "object" : {
                    "type" : "string"
                  },
                  "period" : {
                    "type" : "object",
                    "properties" : {
                      "end" : {
                        "type" : "number"
                      },
                      "start" : {
                        "type" : "number"
                      }
                    }
                  },
                  "plan" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "type" : "number"
                      },
                      "currency" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "interval_count" : {
                        "type" : "number"
                      },
                      "interval" : {
                        "type" : "string"
                      },
                      "livemode" : {
                        "type" : "boolean"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "object" : {
                        "type" : "string"
                      }
                    }
                  },
                  "proration" : {
                    "type" : "boolean"
                  },
                  "quantity" : {
                    "type" : "number"
                  },
                  "type" : {
                    "type" : "string"
                  }
                }
              }
            },
            "object" : {
              "type" : "string"
            },
            "url" : {
              "type" : "string"
            }
          }
        },
        "livemode" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "string"
        },
        "paid" : {
          "type" : "boolean"
        },
        "period_end" : {
          "type" : "number"
        },
        "period_start" : {
          "type" : "number"
        },
        "starting_balance" : {
          "type" : "number"
        },
        "subtotal" : {
          "type" : "number"
        },
        "total" : {
          "type" : "number"
        }
      }
    },
    "account" : {
      "type" : "object",
      "properties" : {
        "charge_enabled" : {
          "type" : "boolean"
        },
        "country" : {
          "type" : "string"
        },
        "currencies_supported" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "default_currency" : {
          "type" : "string"
        },
        "details_submitted" : {
          "type" : "boolean"
        },
        "email" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "object" : {
          "type" : "string"
        },
        "transfer_enabled" : {
          "type" : "boolean"
        }
      }
    },
    "customer" : {
      "type" : "object",
      "properties" : {
        "account_balance" : {
          "type" : "number"
        },
        "cards" : {
          "type" : "object",
          "properties" : {
            "count" : {
              "type" : "number"
            },
            "data" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "country" : {
                    "type" : "string"
                  },
                  "customer" : {
                    "type" : "string"
                  },
                  "exp_month" : {
                    "type" : "number"
                  },
                  "exp_year" : {
                    "type" : "number"
                  },
                  "fingerprint" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "last4" : {
                    "type" : "string"
                  },
                  "object" : {
                    "type" : "string"
                  },
                  "type" : {
                    "type" : "string"
                  }
                }
              }
            },
            "object" : {
              "type" : "string"
            },
            "url" : {
              "type" : "string"
            }
          }
        },
        "created" : {
          "type" : "number"
        },
        "default_card" : {
          "type" : "string"
        },
        "delinquent" : {
          "type" : "boolean"
        },
        "email" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "livemode" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "string"
        },
        "subscription" : {
          "type" : "object",
          "properties" : {
            "cancel_at_period_end" : {
              "type" : "boolean"
            },
            "current_period_end" : {
              "type" : "number"
            },
            "current_period_start" : {
              "type" : "number"
            },
            "customer" : {
              "type" : "string"
            },
            "id" : {
              "type" : "string"
            },
            "object" : {
              "type" : "string"
            },
            "plan" : {
              "type" : "object",
              "properties" : {
                "amount" : {
                  "type" : "number"
                },
                "currency" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "interval_count" : {
                  "type" : "number"
                },
                "interval" : {
                  "type" : "string"
                },
                "livemode" : {
                  "type" : "boolean"
                },
                "name" : {
                  "type" : "string"
                },
                "object" : {
                  "type" : "string"
                }
              }
            },
            "quantity" : {
              "type" : "number"
            },
            "start" : {
              "type" : "number"
            },
            "status" : {
              "type" : "string"
            }
          }
        }
      }
    }
  }
}