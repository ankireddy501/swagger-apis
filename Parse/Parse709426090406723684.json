{
  "swagger" : "2.0",
  "info" : {
    "description" : "Headline : Parse offers developers a backend-as-a-service platform for their mobile applications. Developers can use SDKs for both iOS and Android to persist data and more. The REST API lets developers interact with Parse from computers that aren't mobile devices. With the APIs developers can have their webserver show data from Parse on a website, upload large amounts of data that will later be consumed in a mobile app, download recent data to run their own custom analytics and more.",
    "version" : "1",
    "title" : "Parse"
  },
  "host" : "api.parse.com",
  "basePath" : "/1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/batch" : {
      "post" : {
        "summary" : "To reduce the amount of time spent on network round trips, you can create, update, or delete up to 50 objects in one call, using the batch endpoint.",
        "description" : "To reduce the amount of time spent on network round trips, y...",
        "operationId" : "POST",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/batchPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/batchResponse"
              }
            }
          }
        }
      }
    },
    "/classes/{className}" : {
      "get" : {
        "summary" : "Retreives objects. The response body is a JSON object containing all the user-provided fields,\r\nplus the createdAt, updatedAt, and objectId fields.\r\n",
        "description" : "Retreives objects. The response body is a JSON object contai...",
        "operationId" : "GET",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model730"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/classesQuery"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates an object. When the creation is successful, the HTTP response is a 201 Created\r\nand the Location header contains the object URL for the new object.\r\n",
        "description" : "Creates an object. When the creation is successful, the HTTP...",
        "operationId" : "POST",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/classPost"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/collectionPostResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "className",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/classes/{className}/{objectId}" : {
      "get" : {
        "summary" : "Retreive instance by objectId",
        "description" : "Retreive instance by objectId",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/classGet"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates an object. Any keys you don't specify will remain unchanged, so you can update just a subset of the object's data.\r\n",
        "description" : "Updates an object. Any keys you don't specify will remain un...",
        "operationId" : "PUT",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/classPut"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/collectionPutResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete instance by objectId\r\n",
        "description" : "Delete instance by objectId\r\n",
        "operationId" : "DELETE",
        "consumes" : [ ],
        "parameters" : [ ],
        "responses" : { }
      },
      "parameters" : [ {
        "name" : "className",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "objectId",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/events/AppOpened" : {
      "post" : {
        "summary" : "Starts to collect data on when and how often the application is opened.",
        "description" : "Starts to collect data on when and how often the application...",
        "operationId" : "POST",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/analyticsAppOpened"
          }
        } ],
        "responses" : { }
      }
    },
    "/events/{eventName}" : {
      "post" : {
        "summary" : "Starts to collect data on how oftern the particular event occurs, with some additional metadata.",
        "description" : "Starts to collect data on how oftern the particular event oc...",
        "operationId" : "POST",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/analytics"
          }
        } ],
        "responses" : { }
      },
      "parameters" : [ {
        "name" : "eventName",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/files/{fileName}" : {
      "post" : {
        "summary" : "To upload a file to Parse, send a POST request to the files URL, postfixed with the name of the file.\r\nThe request must contain the Content-Type header associated with the file.\r\nKeep in mind that files are limited to 10 megabytes\r\n",
        "description" : "To upload a file to Parse, send a POST request to the files ...",
        "operationId" : "POST",
        "consumes" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model607"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/fileResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "fileName",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/functions/{functionName}" : {
      "post" : {
        "summary" : "Call a function.",
        "description" : "Call a function.",
        "operationId" : "POST",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/functions"
          }
        } ],
        "responses" : { }
      },
      "parameters" : [ {
        "name" : "functionName",
        "in" : "path",
        "description" : "(Untitled)",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/installations" : {
      "get" : {
        "summary" : "Get all installations, optionally filtered",
        "description" : "Get all installations, optionally filtered",
        "operationId" : "GET",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model957"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/installationsQuery"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new installation",
        "description" : "Create a new installation",
        "operationId" : "POST",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/installationPost"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/collectionPostResponse"
            }
          }
        }
      }
    },
    "/login" : {
      "get" : {
        "summary" : "Logs in a user to his or her account. Response provides a 'sessionToken' which is used to invoke methods with authorized access.",
        "description" : "Logs in a user to his or her account. Response provides a 's...",
        "operationId" : "GET",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model649"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/userGet"
            }
          }
        }
      }
    },
    "/push" : {
      "post" : {
        "summary" : "Send a push notification",
        "description" : "Send a push notification",
        "operationId" : "POST",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/push"
          }
        } ],
        "responses" : { }
      }
    },
    "/requestPasswordReset" : {
      "post" : {
        "summary" : "Initiates password reset for a users who has email associated with his or her account.",
        "description" : "Initiates password reset for a users who has email associate...",
        "operationId" : "POST",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/requestPasswordReset"
          }
        } ],
        "responses" : { }
      }
    },
    "/roles" : {
      "get" : {
        "summary" : "Get all roles, optionally filtered",
        "description" : "Get all roles, optionally filtered",
        "operationId" : "GET",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model575"
          }
        } ],
        "responses" : { }
      },
      "post" : {
        "summary" : "Create a new role",
        "description" : "Create a new role",
        "operationId" : "POST",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/rolePost"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/collectionPostResponse"
            }
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "summary" : "Get all users, optionally filtered",
        "description" : "Get all users, optionally filtered",
        "operationId" : "GET",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/model514"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/usersQuery"
            }
          }
        }
      },
      "post" : {
        "summary" : "Signs up a new user.\r\n",
        "description" : "Signs up a new user.\r\n",
        "operationId" : "POST",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "(Untitled)",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/userPost"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/usersPostResponse"
            }
          }
        }
      }
    },
    "/users/me" : {
      "get" : {
        "summary" : "Retrieve the user associated with the session token placed into the 'X-Parse-Session-Token' header.\r\nIf the session token is not valid, an error object is returned.\r\n",
        "description" : "Retrieve the user associated with the session token placed i...",
        "operationId" : "GET",
        "consumes" : [ ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "(Untitled)",
            "schema" : {
              "$ref" : "#/definitions/userGet"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "collectionPostResponse" : {
      "type" : "object",
      "properties" : {
        "createdAt" : {
          "type" : "string"
        },
        "objectId" : {
          "type" : "string"
        }
      }
    },
    "collectionPutResponse" : {
      "type" : "object",
      "properties" : {
        "updatedAt" : {
          "type" : "string"
        }
      }
    },
    "classesQuery" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "createdAt" : {
                "type" : "string"
              },
              "objectId" : {
                "type" : "string"
              },
              "updatedAt" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "functions" : { },
    "batchResponse" : { },
    "rolePost" : {
      "type" : "object",
      "properties" : {
        "ACL" : {
          "type" : "object",
          "properties" : {
            "*" : {
              "type" : "object",
              "properties" : {
                "read" : {
                  "type" : "boolean"
                },
                "write" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "name" : {
          "type" : "string"
        },
        "roles" : {
          "type" : "object",
          "properties" : {
            "__op" : {
              "type" : "string",
              "pattern" : "^AddRelation$"
            },
            "objects" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "__type" : {
                    "type" : "string",
                    "pattern" : "^_Role$"
                  },
                  "className" : {
                    "type" : "string"
                  },
                  "objectId" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "users" : {
          "type" : "object",
          "properties" : {
            "__op" : {
              "type" : "string",
              "pattern" : "^AddRelation$"
            },
            "objects" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "__type" : {
                    "type" : "string",
                    "pattern" : "^_User$"
                  },
                  "className" : {
                    "type" : "string"
                  },
                  "objectId" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "installationsQuery" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "devicetype" : {
                "type" : "string"
              },
              "createdAt" : {
                "type" : "string"
              },
              "objectId" : {
                "type" : "string"
              },
              "updatedAt" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "push" : {
      "type" : "object",
      "properties" : {
        "channels" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "data" : {
          "type" : "object",
          "properties" : { }
        },
        "expiration_interval" : {
          "type" : "number"
        },
        "push_time" : {
          "type" : "string"
        },
        "where" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "analytics" : {
      "type" : "object",
      "properties" : {
        "at" : {
          "type" : "object",
          "properties" : {
            "__type" : {
              "type" : "string"
            },
            "iso" : {
              "type" : "string"
            }
          }
        },
        "dimensions" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "userGet" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "objectId" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        }
      }
    },
    "usersPostResponse" : {
      "type" : "object",
      "properties" : {
        "createdAt" : {
          "type" : "string"
        },
        "objectId" : {
          "type" : "string"
        },
        "sessionToken" : {
          "type" : "string"
        }
      }
    },
    "classPost" : {
      "type" : "object"
    },
    "classPut" : {
      "type" : "object"
    },
    "usersQuery" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "username" : {
                "type" : "string"
              },
              "createdAt" : {
                "type" : "string"
              },
              "objectId" : {
                "type" : "string"
              },
              "updatedAt" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "userPost" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "analyticsAppOpened" : {
      "type" : "object",
      "properties" : {
        "at" : {
          "type" : "object",
          "properties" : {
            "__type" : {
              "type" : "string"
            },
            "iso" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "classGet" : {
      "type" : "object",
      "properties" : {
        "objectId" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        }
      }
    },
    "requestPasswordReset" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        }
      }
    },
    "fileResponse" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    }
  }
}